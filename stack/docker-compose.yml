version: "3.2"
services:
  socket-server:
    # build: .
    # image: sw360cab/wsk-base:0.1.1
    image: websocket_local
    # restart: always
    deploy:
      mode: replicated
      replicas: 2
    environment:
      - "REDIS_HOST=redis"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.socket-router.rule=PathPrefix(`/wsk`)"
      - "traefik.http.services.service01.loadbalancer.server.port=5000"
      - "traefik.http.services.service01.loadbalancer.sticky.cookie=true"
      - "traefik.http.services.service01.loadbalancer.sticky.cookie.name=io"
      - "traefik.http.services.service01.loadbalancer.sticky.cookie.httponly=true"
      - "traefik.http.services.service01.loadbalancer.sticky.cookie.secure=true"
      - "traefik.http.services.service01.loadbalancer.sticky.cookie.samesite=lax"
      # Replace prefix /wsk
      - "traefik.http.middlewares.socket-replaceprefix.replacepath.path=/"
      # Apply the middleware named `socket-replaceprefix` to the router named `scoker-router`
      - "traefik.http.routers.socket-router.middlewares=socket-replaceprefix@docker"

  traefik-reverse-proxy:
    image: traefik:v2.2
    command:
      - "--api.insecure=true"
      - "--providers.docker.exposedByDefault=false"
      - "--accesslog"
      # - "--entryPoints.web.address=:80"
      # - "--entryPoints.web.forwardedHeaders.insecure=true"
    ports:
      - "80:80"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # allow Traefik to listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: redis:5.0
